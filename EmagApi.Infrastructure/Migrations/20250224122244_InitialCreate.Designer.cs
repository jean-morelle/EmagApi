// <auto-generated />
using System;
using EmagApi.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmagApi.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250224122244_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmagApi.Domain.Models.Filiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Filiere");
                });

            modelBuilder.Entity("EmagApi.Domain.Models.Matiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FiliereId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FiliereId");

                    b.ToTable("Matiere");
                });

            modelBuilder.Entity("EmagApi.Domain.Models.Professeur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDeNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("DernierDiplome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sexe")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Professeurs");
                });

            modelBuilder.Entity("EmagApi.Domain.Models.Seance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NombreHeure")
                        .HasColumnType("int");

                    b.Property<int>("ProfesseurId")
                        .HasColumnType("int");

                    b.Property<bool>("SeanceTenue")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ProfesseurId");

                    b.ToTable("Seances");
                });

            modelBuilder.Entity("EmagApi.Domain.Models.SeanceMatiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("CommencerA")
                        .HasColumnType("time");

                    b.Property<int>("MatiereId")
                        .HasColumnType("int");

                    b.Property<int>("SeanceId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TerminerA")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("MatiereId");

                    b.HasIndex("SeanceId");

                    b.ToTable("SeanceMatiere");
                });

            modelBuilder.Entity("EmagApi.Domain.Models.Matiere", b =>
                {
                    b.HasOne("EmagApi.Domain.Models.Filiere", null)
                        .WithMany("Matieres")
                        .HasForeignKey("FiliereId");
                });

            modelBuilder.Entity("EmagApi.Domain.Models.Seance", b =>
                {
                    b.HasOne("EmagApi.Domain.Models.Professeur", "Professeur")
                        .WithMany("Seances")
                        .HasForeignKey("ProfesseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professeur");
                });

            modelBuilder.Entity("EmagApi.Domain.Models.SeanceMatiere", b =>
                {
                    b.HasOne("EmagApi.Domain.Models.Matiere", "Matiere")
                        .WithMany("SeanceMatieres")
                        .HasForeignKey("MatiereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmagApi.Domain.Models.Seance", "Seance")
                        .WithMany("SeanceMatieres")
                        .HasForeignKey("SeanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matiere");

                    b.Navigation("Seance");
                });

            modelBuilder.Entity("EmagApi.Domain.Models.Filiere", b =>
                {
                    b.Navigation("Matieres");
                });

            modelBuilder.Entity("EmagApi.Domain.Models.Matiere", b =>
                {
                    b.Navigation("SeanceMatieres");
                });

            modelBuilder.Entity("EmagApi.Domain.Models.Professeur", b =>
                {
                    b.Navigation("Seances");
                });

            modelBuilder.Entity("EmagApi.Domain.Models.Seance", b =>
                {
                    b.Navigation("SeanceMatieres");
                });
#pragma warning restore 612, 618
        }
    }
}
